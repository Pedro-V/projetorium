@startuml
abstract class Pessoa <<entity>> {
  nome: String
  telefone: String[]
  dataNasc: Date
  matricula: String
}

class Departamento <<entity>> {
  nome: String
}

class Disciplina <<entity>> {
  nome: String
  codigo: String
}

class Curso <<entity>> {
  nome: String
}

class Professor <<entity>> {
  departamento: Departamento
}

class Aluno <<entity>> {
  curso: Curso
}

class Grupo <<entity>> {
  membros: Aluno[]
}

enum StatusProjeto <<enumeration>> {
  aprovado
  concluido
  cancelado
  rejeitado
}

abstract class ProjetoAbstrato <<entity>> {
  titulo: String
  descricao: String
  status: StatusProjeto
  tags: String[]
  autor: Pessoa
  documentos: File[]
}

class Projeto <<entity>> {
  dataCriado: Date
  adicionarMembros()
  persistirMudan√ßas()
}

class Turma <<entity>> {
  codigo: String
  disciplina: Disciplina
  periodo: Periodo
  adicionarProposta()
  adicionarProjeto()
}

class Periodo <<entity>> {
  ano: Int
  numeroPeriodo: Int
}

class PropostaProjeto <<entity>> {
  proponente: Grupo
  dataProposto: Date
}

class Avaliacao <<entity>> {
  status: StatusAvaliacao
  mensagem: String
}

enum StatusAvaliacao <<enumeration>> {
  aprovado
  rejeitado
  melhorias
}

Avaliacao "0..*" -- "1..1" StatusAvaliacao
Avaliacao "0..*" -- "1..1" PropostaProjeto

Pessoa <|-- Professor
Pessoa <|-- Aluno

Aluno "1..*" --* "0..1" Grupo 
Aluno "1..*" -- "0..*" Turma
Aluno "1..*" -- "1..1" Curso

Professor "1..*" -- "1..1" Departamento
Professor "1..*" -- "0..*" Turma

Departamento "1..1" -- "1..*" Disciplina
Departamento "1..1" -- "1..*" Curso

Turma "1..*" -- "1..1" Periodo
Turma "0..*" -- "1..1" Disciplina

ProjetoAbstrato <|-- Projeto
ProjetoAbstrato <|-- PropostaProjeto

ProjetoAbstrato "0..*" -- "1..1" StatusProjeto
Projeto "0..*" -- "1..1" Turma

class TelaNotificacao <<boundary>> {
  notificarAvaliacao()
  notificarMembros()
  notificarProposta()
  notificar()
}

class TelaInicialAluno <<boundary>> {
  acessarTurma()
  exibirTelaTurma()
}

class TelaInicialProfessor <<boundary>> {
  acessarTurma()
  exibirTelaTurma()
}

class TelaTurmaAluno <<boundary>> {
  exibirTelaEscolhaProjeto()
  exibirTelaAtualizarProjeto()
  exibirTelaProposta()
}

class TelaTurmaProfessor <<boundary>> {
  exibirTelaAvaliacao()
}

TelaTurmaAluno -- TelaInicialAluno
TelaTurmaProfessor -- TelaInicialProfessor

package "Escolher projeto" {
  class TelaEscolhaProjeto <<boundary>> {
    exibirProjetos()
    confirmarEscolha()
    mostrarErro()
  }

  class ControleEscolhaProjeto <<control>> {
    cadastrarGrupo()
    adicionarMembros()
  }

  TelaTurmaAluno -- TelaEscolhaProjeto
  TelaEscolhaProjeto -- ControleEscolhaProjeto
  ControleEscolhaProjeto -- TelaNotificacao
  ControleEscolhaProjeto -- Projeto
}

package "Propor projeto" {
  class TelaProposta <<boundary>> {
    informadosDados()
    confirmarEnvio()
  }

  class ControladorProposta <<control>> {
    registrarProposta()
    notificarProfessor()
  }

  TelaProposta -- TelaTurmaAluno
  TelaProposta -- ControladorProposta
  ControladorProposta -- PropostaProjeto
  ControladorProposta -- Turma
}

package "Manter projeto" {
  class TelaAtualizarProjeto <<boundary>> {
    informarDados()
    confirmarEnvio()
  }

  class ManutencaoProjeto <<control>> {
    efetuarMudancas()
    notificarMembros()
  }

  ManutencaoProjeto -- Projeto
  TelaAtualizarProjeto -- ManutencaoProjeto
  TelaAtualizarProjeto -- TelaNotificacao
  TelaAtualizarProjeto -- TelaTurmaAluno
}

package "Avaliar proposta" {
  class TelaAvaliacao <<boundary>> {
    confirmarAvaliacao()
    enviarAvaliacao()
  }

  class ControladorAvaliacao <<control>> {
    construirProjeto()
    rejeitarProposta()
  }

  TelaAvaliacao -- TelaTurmaProfessor
  ControladorAvaliacao -- TelaAvaliacao
  ControladorAvaliacao -- Projeto
  ControladorAvaliacao -- Avaliacao
  ControladorAvaliacao -- TelaNotificacao
}

package "Ofertar projeto" {
  class TelaOferta <<boundary>> {
    informarDados()
    confirmarEnvio()
  }
  
  class ControladorOferta <<control>> {
    criarOferta()
    notificarTurma()
  }

  TelaOferta -- TelaTurmaProfessor
  ControladorOferta -- TelaOferta
  ControladorOferta -- Turma
}

package "Manter Aluno" {
  class TelaCriacaoAluno <<boundary>> {
    informarDados()
    confirmarEnvio()
  }
  class ControleAluno <<control>> {
    criarAluno()
    editarAluno()
  }

  TelaCriacaoAluno -- ControleAluno
  ControleAluno -- Aluno
}

package "Manter Turma" {
  class TelaTurmaInclusao <<boundary>> {
    informarDadosIndividual()
    informarDadosLote()
    confirmarEnvio()
  }
  class ControleTurma <<control>> {
    incluirAluno()
    incluirAlunoEmLote()
  }

  TelaTurmaInclusao -- ControleTurma
  TelaTurmaInclusao -- TelaTurmaProfessor
  ControleTurma -- Aluno
  ControleTurma -- Turma
}

package "Consultar Projeto" {
  class TelaConsulta <<boundary>> {
    coletarTermoBusca()
    selecionarFiltros()
    exibirFiltros()
    preencherFiltros()
    confirmarConsulta()
  }
  class TelaResultados <<boundary>> {
    exibeResultados()
  }
  class Buscador <<control>> {
    processarConsulta()
    verificarVisibilidade()
  }

  class Filtrador <<control>> {
    cumpreFiltro()
    insereProjeto()
    descartaProjeto()
  }

  class GeradorResultados <<control>> {
    gerarResultados()
    informarResultados()
  }

  Buscador -- Filtrador
  Filtrador -- GeradorResultados
  Buscador -- TelaConsulta
  Buscador -- Projeto
  GeradorResultados -- TelaResultados
}

package "Efetuar Login" {
  class TelaLogin <<boundary>> {
    enviarCredenciais()
    informarSucesso()
    informarFalha()
  }

  class VerificadorLogin <<control>> {
    efetuarLogin()
    verificarValidez()
    informarValidez()
  }

  VerificadorLogin -- TelaLogin
  VerificadorLogin -- Aluno
  VerificadorLogin -- Professor
}

@enduml
