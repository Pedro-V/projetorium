# Generated by Django 5.0 on 2024-02-18 03:20

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('app', '0002_alter_user_is_student_alter_user_is_teacher'),
    ]

    operations = [
        migrations.CreateModel(
            name='Departamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cod_departamento', models.CharField(max_length=10)),
                ('nome', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='Grupo',
            fields=[
                ('cod_grupo', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Disciplina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cod_disciplina', models.CharField(max_length=10)),
                ('nome', models.CharField(max_length=300)),
                ('cod_departamento', models.ForeignKey(on_delete=models.SET('Nao existe'), to='app.departamento')),
            ],
        ),
        migrations.CreateModel(
            name='Aluno',
            fields=[
                ('matricula_aluno', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=300)),
                ('curso', models.CharField(max_length=300)),
                ('data_nascimento', models.DateField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('cod_grupo', models.ForeignKey(null=True, on_delete=models.SET('Nao existe'), to='app.grupo')),
            ],
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('matricula_professor', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('nome', models.CharField(max_length=300)),
                ('data_nascimento', models.DateField()),
                ('cod_departamento', models.ForeignKey(on_delete=models.SET('Nao existe'), to='app.departamento')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Turma',
            fields=[
                ('cod_turma', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('cod_disciplina', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.disciplina')),
            ],
        ),
        migrations.CreateModel(
            name='Turma_Aluno',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cod_turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.turma')),
                ('matricula_aluno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.aluno')),
            ],
        ),
        migrations.CreateModel(
            name='Turma_Professor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cod_turma', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.turma')),
                ('matricula_professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.professor')),
            ],
        ),
        migrations.AddConstraint(
            model_name='turma_aluno',
            constraint=models.UniqueConstraint(fields=('cod_turma', 'matricula_aluno'), name='cod_turma_aluno'),
        ),
        migrations.AddConstraint(
            model_name='turma_professor',
            constraint=models.UniqueConstraint(fields=('cod_turma', 'matricula_professor'), name='cod_turma_professor'),
        ),
    ]
